$ninesixty-gutter-width: 20px !default;
$ninesixty-grid-width: 960px !default;
$ninesixty-columns: 12 !default;

@mixin grid-container {
  margin-left: auto;
  margin-right: auto;
  width: $ninesixty-grid-width;
}

@mixin grid-width($n, $cols: $ninesixty-columns, $gutter-width: $ninesixty-gutter-width) {
  width: $ninesixty-grid-width / $cols * $n - $gutter-width;
}

@mixin grid-unit-base($gutter-width: $ninesixty-gutter-width) {
	display: inline;
  float: left;
  margin: {
    left: $gutter-width / 2;
    right: $gutter-width / 2;
	};
}

@mixin grid($n, $cols: $ninesixty-columns, $gutter-width: $ninesixty-gutter-width) {
  @include grid-unit-base($gutter-width);
  @include grid-width($n, $cols, $gutter-width);
}

@mixin alpha {
  margin-left: 0;
}

@mixin omega {
	margin-right: 0;
}

@mixin grids($cols: $ninesixty-columns, $gutter-width: $ninesixty-gutter-width) {
  #{enumerate(".grid", 1, $cols, "_")}{
    @include grid-unit-base;
	}
  @for $n from 1 through $cols {
    .grid_#{$n} {
      @include grid-width($n, $cols, $gutter-width);
		}
	}
}

@mixin grid-prefix($n, $cols: $ninesixty-columns) {
  padding-left: $ninesixty-grid-width / $cols * $n;
}

@mixin grid-prefixes($cols: $ninesixty-columns) {
  @for $n from 1 through $cols - 1 {
    .prefix_#{$n} {
      @include grid-prefix($n, $cols);
		}
	}
}

@mixin grid-suffix($n, $cols: $ninesixty-columns) {
  padding-right: $ninesixty-grid-width / $cols * $n;
}

@mixin grid-suffixes($cols: $ninesixty-columns) {
  @for $n from 1 through $cols - 1 {
    .suffix_#{$n} {
      @include grid-suffix($n, $cols);
		}
	}
}

@mixin grid-children {
  .alpha {
    @include alpha;
	}
  .omega {
    @include omega;
	}
}

@mixin grid-system($cols: $ninesixty-columns) {
  @include grid-container;
  @include grids($cols);
  @include grid-prefixes($cols);
  @include grid-suffixes($cols);
  @include grid-children;
}
